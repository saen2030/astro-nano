---
import { getCollection } from "astro:content";
import Container from "@components/Container.astro";
import PageLayout from "@layouts/PageLayout.astro";
import ArrowCard from "@components/ArrowCard.astro";
import Link from "@components/Link.astro";
import { dateRange } from "@lib/utils";
import { SITE, HOME, SOCIALS } from "@consts";

const blog = (await getCollection("blog"))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0, SITE.NUM_POSTS_ON_HOMEPAGE);

const projects = (await getCollection("projects"))
  .filter((project) => !project.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0, SITE.NUM_PROJECTS_ON_HOMEPAGE);

const allwork = (await getCollection("work"))
  .sort(
    (a, b) =>
      new Date(b.data.dateStart).valueOf() -
      new Date(a.data.dateStart).valueOf()
  )
  .slice(0, SITE.NUM_WORKS_ON_HOMEPAGE);

const work = await Promise.all(
  allwork.map(async (item) => {
    const { Content } = await item.render();
    return { ...item, Content };
  })
);
---

<PageLayout title={HOME.TITLE} description={HOME.DESCRIPTION}>
  <Container>
    <h4
      class="animate font-semibold text-black dark:text-white flex items-center"
      style="min-width: 20ch; min-height: 1.5em;"
    >
      <span class="mr-2">&gt;</span>
      <span id="animated_intro">Hey, I'm a dev.</span>
    </h4>
    <div class="space-y-16">
      <section>
        <article class="space-y-4">
          <p class="animate">
            I am a passionate and results-driven software developer with a
            strong foundation in creating innovative and efficient solutions.
            With hands-on experience in software development, I excel at
            transforming complex challenges into streamlined, impactful
            applications.
          </p>
          <p class="animate">
            Committed to continuous growth, I am always exploring the latest
            trends in technology and refining my skills to stay ahead in the
            ever-evolving tech landscape. My goal is to contribute to meaningful
            projects that push boundaries and deliver exceptional value.
          </p>
        </article>
      </section>

      <section class="animate space-y-6">
        <div class="flex flex-wrap gap-y-2 items-center justify-between">
          <h5 class="font-semibold text-black dark:text-white">
            Work Experience
          </h5>
          <Link href="/work"> See all work </Link>
        </div>
        <ul class="flex flex-col space-y-4">
          {
            work.map((entry) => (
              <li>
                <div class="text-sm opacity-75">
                  {dateRange(entry.data.dateStart, entry.data.dateEnd)}
                </div>
                <div class="font-semibold text-black dark:text-white">
                  {entry.data.company}
                </div>
                <div class="text-sm opacity-75">{entry.data.role}</div>
                <article>
                  <entry.Content />
                </article>
              </li>
            ))
          }
        </ul>
      </section>

      <!-- <section class="animate space-y-6">
        <div class="flex flex-wrap gap-y-2 items-center justify-between">
          <h5 class="font-semibold text-black dark:text-white">
            Recent projects
          </h5>
          <Link href="/projects"> See all projects </Link>
        </div>
        <ul class="flex flex-col gap-4">
          {
            projects.map((project) => (
              <li>
                <ArrowCard entry={project} />
              </li>
            ))
          }
        </ul>
      </section> -->
      <section class="animate space-y-6">
        <div class="flex flex-wrap gap-y-2 items-center justify-between">
          <h5 class="font-semibold text-black dark:text-white">Latest posts</h5>
          <Link href="/blog"> See all posts </Link>
        </div>
        <ul class="flex flex-col gap-4">
          {
            blog.map((post) => (
              <li>
                <ArrowCard entry={post} />
              </li>
            ))
          }
        </ul>
      </section>

      <section id="connect" class="animate space-y-4">
        <h5 class="font-semibold text-black dark:text-white">Let's Connect</h5>
        <article>
          <p>
            If you want to get in touch with me about something or just to say
            hi, reach out on social media or send me an email.
          </p>
        </article>
        <ul class="flex flex-wrap gap-2">
          {
            SOCIALS.map((SOCIAL) => (
              <li class="flex gap-x-2 text-nowrap">
                <Link
                  href={SOCIAL.HREF}
                  external
                  aria-label={`${SITE.NAME} on ${SOCIAL.NAME}`}
                >
                  {SOCIAL.NAME}
                </Link>
                {"/"}
              </li>
            ))
          }
          <li class="line-clamp-1">
            <Link
              href={`mailto:${SITE.EMAIL}`}
              aria-label={`Email ${SITE.NAME}`}
            >
              email
            </Link>
          </li>
        </ul>
      </section>
    </div>
    <script>
      const heroHeadline = document.getElementById("animated_intro");

      // Check if the element exists
      if (heroHeadline) {
        const text = heroHeadline.textContent || ""; // Fallback to an empty string if textContent is null
        const typingSpeed = 120;
        const deletingSpeed = 20;
        const pauseTime = 200;

        let index = 0; // Start from beginning since we moved the ">" out
        let isDeleting = false;

        function typeEffect() {
          if (isDeleting) {
            if (heroHeadline) {
              heroHeadline.textContent = text.substring(0, index--);
            }
          } else {
            if (heroHeadline) {
              heroHeadline.textContent = text.substring(0, index++);
            }
          }

          const delay = isDeleting ? deletingSpeed : typingSpeed;

          // Handle transitions between typing and deleting
          if (!isDeleting && index === text.length) {
            setTimeout(() => (isDeleting = true), pauseTime);
          } else if (isDeleting && index === 0) {
            isDeleting = false;
            setTimeout(typeEffect, pauseTime);
            return;
          }

          setTimeout(typeEffect, delay);
        }

        typeEffect();
      } else {
        console.error("Element with ID 'animated_intro' not found in the DOM.");
      }
    </script>
  </Container>
</PageLayout>
